<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pl.model.dao.PL_DAO">

	<!-- 추천장소 리스트 -->	
	<resultMap type="pl.model.dto.PL_ListAllDTO" id="plListAllResultMap">
		<id property="pl_no" column="PL_NO"/>
		<result property="rownum" column="ROWNUM"/>
		<result property="pl_name" column="PL_NAME"/>
		<result property="pl_address" column="PL_ADDRESS"/>
		<result property="pl_tel" column="PL_TEL"/>
		<result property="score" column="SCORE"/>
		<result property="pl_reserve" column="PL_RESERVE"/>
		<collection property="category" resultMap="categoryResultMap"/> 
		<collection property="tag" resultMap="tagResultMap"/>
	</resultMap>
	
		<!-- 카테고리 DTO -->
	<resultMap type="pl.model.dto.PL_CategoryDTO" id="categoryResultMap">
		<id property="category_code" column="CATEGORY_CODE"/>
		<result property="category_name" column="CATEGORY_NAME"/>
	</resultMap>
	
	<!-- 태그 DTO -->
	<resultMap type="pl.model.dto.PL_TagDTO" id="tagResultMap">
		<id property="tag_code" column="TAG_CODE"/>
		<result property="tag_name" column="TAG_NAME"/>
	</resultMap> 
	
	<!-- 이름순 정렬 -->
	<select id="selectAllName" resultMap="plListAllResultMap">
		SELECT 
			ROWNUM,
			A.*
		FROM (
				SELECT 
					A.*,
					B.*,
					C.*
				FROM PLACE_LIST A
				JOIN CATEGORY B ON A.PL_CATECODE = B.CATEGORY_CODE 
				JOIN TAG C ON A.PL_TAGCODE = C.TAG_CODE
			 	ORDER BY A.PL_NAME 
		) A
	</select>

	<!-- 주소별 정렬 -->
	<select id="selectAllAddress" resultMap="plListAllResultMap">
		SELECT 
			ROWNUM,
			A.*
		FROM (
			 	SELECT 
					A.*,
					B.*,
					C.*
				FROM PLACE_LIST A
				JOIN CATEGORY B ON A.PL_CATECODE = B.CATEGORY_CODE 
				JOIN TAG C ON A.PL_TAGCODE = C.TAG_CODE
			 	ORDER BY PL_ADDRESS 
		) A
	</select>
	
	<!-- 별점순 정렬 -->
	<select id="selectAllScore" resultMap="plListAllResultMap">
		SELECT  
			ROWNUM,
			SS.*
		FROM (
				SELECT 
					A.*,
					B.*,
					C.*
				FROM PLACE_LIST A
				JOIN CATEGORY B ON A.PL_CATECODE = B.CATEGORY_CODE 
				JOIN TAG C ON A.PL_TAGCODE = C.TAG_CODE
				ORDER BY A.SCORE DESC
			) SS
	</select>
	
	<!-- 카테고리별 정렬 -->
	<select id="selectAllCategory" resultMap="plListAllResultMap">
		SELECT  
			ROWNUM,
			CS.*
		FROM (
				SELECT 
					A.*,
					B.*,
					C.*
				FROM PLACE_LIST A
				JOIN CATEGORY B ON A.PL_CATECODE = B.CATEGORY_CODE 
				JOIN TAG C ON A.PL_TAGCODE = C.TAG_CODE 
				ORDER BY A.PL_CATECODE
			)CS
	</select>

	<!-- 추천장소를 내 장소에 저장 -->
	<insert id="saveMyList" parameterType="pl.model.dto.PL_ListAllDTO">
		INSERT INTO MY_LIST A
		(
			A.MY_NO ,
			A.MY_NAME ,
			A.MY_ADDRESS ,
			A.MY_TEL ,
			A.MY_SCORE ,
			A.MY_CATECODE ,
			A.MY_TAGCODE ,
			A.MY_RESERVE
		)
		VALUES 
		(
			SEQ_MY_NO.NEXTVAL ,
			#{ pl_name } ,
			#{ pl_address } ,
			#{ pl_tel } ,
			#{ score } ,
			#{ pl_catecode } ,
			#{ pl_tagcode } ,
			#{ pl_reserve } 
		)
	</insert>
		
		
	<!-- 내 장소 리스트 -->	
	<resultMap type="pl.model.dto.PL_ListAllDTO" id="myListAllResultMap">
		<id property="pl_no" column="MY_NO"/>
		<result property="rownum" column="ROWNUM"/>
		<result property="pl_name" column="MY_NAME"/>
		<result property="pl_address" column="MY_ADDRESS"/>
		<result property="pl_tel" column="MY_TEL"/>
		<result property="score" column="MY_SCORE"/>
		<result property="pl_reserve" column="MY_RESERVE"/>
		<collection property="category" resultMap="myCategoryResultMap"/>
		<collection property="tag" resultMap="myTagResultMap"/>
	</resultMap>
	
	<!-- 카테고리 DTO -->
	<resultMap type="pl.model.dto.PL_CategoryDTO" id="myCategoryResultMap">
		<id property="category_code" column="CATEGORY_CODE"/>
		<result property="category_name" column="CATEGORY_NAME"/>
	</resultMap>
	
	<!-- 태그 DTO -->
	<resultMap type="pl.model.dto.PL_TagDTO" id="myTagResultMap">
		<id property="tag_code" column="TAG_CODE"/>
		<result property="tag_name" column="TAG_NAME"/>
	</resultMap>
	
	
	<!-- 내 장소 리스트 출력 -->
	<select id="selectAllPlace" resultMap="myListAllResultMap">
		SELECT * 
		FROM MY_LIST a
		JOIN CATEGORY b ON a.MY_CATECODE = b.CATEGORY_CODE
		JOIN TAG c ON a.MY_TAGCODE = c.TAG_CODE
	</select>
	
	<!-- 내 장소 정보 수정 -->
	<update id="updateMyList" parameterType="pl.model.dto.PL_ListAllDTO">
		UPDATE MY_LIST M 
		<set>
			<if test="pl_name != null and pl_name != ''">
				M.MY_NAME = #{ pl_name },
			</if>
			<if test="pl_address != null and pl_address != ''">
				M.MY_ADDRESS = #{ pl_address },
			</if>
			<if test="pl_tel != null and pl_tel != ''">
				M.MY_TEL = #{ pl_tel },
			</if>
			<if test="score != null and score gt 0 and score lt 6">
				M.MY_SCORE = #{ score },
			</if>
			<if test="pl_catecode != null and pl_catecode != ''">
				M.MY_CATECODE = #{ pl_catecode },
			</if>
			<if test="pl_reserve != null and pl_reserve != ''">
				M.MY_RESERVE = #{ pl_reserve },
			</if>
		</set>
		 WHERE M.MY_NO = #{ pl_no } 
	</update>
		
	<!-- 내 장소 삭제 -->	         
	<delete id="deleteMyList" parameterType="_int">
		DELETE FROM MY_LIST
		WHERE MY_NO = #{ plNo }
	</delete>
	
	<!-- 내 장소에 장소 직접 추가 -->	
	<insert id="insertPlace" parameterType="pl.model.dto.PL_ListAllDTO">
		INSERT INTO MY_LIST M
		(
		    M.MY_NO ,
			M.MY_NAME ,
			M.MY_ADDRESS ,
			M.MY_TEL ,
			M.MY_SCORE ,
			M.MY_CATECODE ,
			M.MY_TAGCODE ,
			M.MY_RESERVE
		)
		VALUES	
		(
			SEQ_MY_NO.NEXTVAL ,
			#{ pl_name } ,
			#{ pl_address } ,
			#{ pl_tel } ,
			#{ score } ,
			#{ pl_catecode },
			#{ pl_tagcode },
			#{ pl_reserve }
		)
	</insert>


	<!-- 내 예약 리스트 -->		
	<resultMap type = "pl.model.dto.PL_ListAndReserveDTO" id = "reserveResultMap">
			<id property = "reserve_no" column = "RESERVE_NO"/>
			<result property = "user_no" column ="USER_NO"/>
			<result property = "my_no" column ="MY_NO"/>
			<result property = "reserve_day" column ="RESERVE_DAY"/>
			<result property = "reserve_time" column ="RESERVE_TIME"/>
		<association property="listDTO" resultMap="PllistResultMap"/>
	</resultMap>
	
	<!-- 내 장소 리스트 -->
	<resultMap type="pl.model.dto.PL_ListAllDTO" id="PllistResultMap">
		<id property="pl_no" column="MY_NO"/>
		<result property="rownum" column="ROWNUM"/>
		<result property="pl_name" column="MY_NAME"/>
		<result property="pl_address" column="MY_ADDRESS"/>
		<result property="pl_tel" column="MY_TEL"/>
		<result property="score" column="MY_SCORE"/>
		<result property="pl_reserve" column="MY_RESERVE"/>
	</resultMap>
	
	<select id = "reserveMine" resultMap = "reserveResultMap">
		SELECT
			A. RESERVE_NO AS 예약번호
			, B. MY_NAME AS 매장명
		FROM RESERVATION A
		JOIN MY_LIST B
		ON A.MY_NO = B.MY_NO
	</select>

	<select id = "reserveInfo" parameterType="_int" resultMap = "reserveResultMap">
		SELECT
				A. MY_NAME
				, TO_CHAR(TO_DATE(B. RESERVE_DAY,'YYMMDD'),'RRRR-MM-DD') AS 예약일
				, B. RESERVE_TIME
			FROM MY_LIST A
			JOIN RESERVATION B
			ON A.MY_NO = B.MY_NO
			WHERE B.RESERVE_NO = #{ reserve_no }
	</select>
	
	<insert id="addReserve" parameterType="pl.model.dto.PL_ReservationDTO">
 		INSERT
          INTO RESERVATION A
        (
        A.RESERVE_NO
        , A.RESERVE_DAY
        , A.RESERVE_TIME
        , A.USER_NO
        , A.MY_NO
        )
        VALUES
        (
          SEQ_RESERVE_NO.NEXTVAL
        , #{ reserve_day }
        , #{ reserve_time }
        , 1
        , #{ my_no }
        )
	</insert>

	<update id="editReserve" parameterType="pl.model.dto.PL_ReservationDTO">
       UPDATE RESERVATION
        SET
      
      , RESERVE_DAY =#{ reserve_day }
        , RESERVE_TIME=#{ reserve_time }
        WHERE RESERVE_NO=#{ reserve_no }
	</update>
	
	<delete id="cancelReserve" parameterType="_int">
        DELETE
          FROM RESERVATION
       	 WHERE RESERVE_NO = #{ reserve_no }
	</delete>
	
	
	<!-- 회원 리스트 -->		
	<resultMap type="pl.model.dto.PL_UserDTO" id="userMap">
		<id property="user_no" column="USER_NO"/>
		<result property="user_id" column="USER_ID"/>
		<result property="user_pwd" column="USER_PWD"/>
		<result property="user_name" column="USER_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="enroll_date" column="ENROLL_DATE"/>
		<result property="del_date" column="DEL_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="manager" column="MANAGER"/>
	</resultMap>
	
	<!-- 아이디 중복 체크 -->
	<select id="userIdOverlapCheck" parameterType="string" resultMap="userMap">
		SELECT *
		  FROM PL_USER
		 WHERE USER_ID = #{user_id}
		   AND STATUS = 'N'
	</select>
	
	<!-- 비밀번호 중복 ㅊ케ㅡ -->
	<select id="userPwdOverlapCheck" parameterType="string" resultMap="userMap">
		SELECT *
		  FROM PL_USER
		 WHERE USER_PWD = #{user_pwd}
		   AND STATUS = 'N'
	</select>
	
	<!-- 회원가입 -->
	<insert id="registUser" parameterType="pl.model.dto.PL_UserDTO">
        INSERT
          INTO PL_USER
        (
          USER_NO
        , USER_ID
        , USER_PWD
        , USER_NAME
        , PHONE
        )
        VALUES
        (
          SEQ_USER_NO.NEXTVAL
        , #{user_id}
        , #{user_pwd}
        , #{user_name}
        , #{phone}
        )
	</insert>
	
	<!-- 내 정보 조회 -->
	<select id="selectMyInfo" parameterType="string" resultMap="userMap">
		SELECT 
			   USER_ID,
			   USER_PWD,
			   USER_NAME,
			   PHONE,
			   ENROLL_DATE
		  FROM PL_USER
		 WHERE USER_ID = #{user_id}
		   AND STATUS = 'N'
	</select>
	
	<!-- 회원 탈퇴 -->
	<update id="withdrawalUserOne" parameterType="string">
        UPDATE PL_USER
        <trim prefix="SET" prefixOverrides=",">
      	   		DEL_DATE = SYSDATE
      	   	   , STATUS = 'Y'
         WHERE USER_ID = #{user_id}
         AND STATUS = 'N'
         </trim>
	</update>
	
	<!-- 관리자)사용자 목록 조회 -->
	<select id = "selectUserList" parameterType="pl.model.dto.PL_UserDTO" resultMap="userMap">
		SELECT *
		  FROM PL_USER
		ORDER BY USER_NO
	</select>
	
	<!-- 관리자)사용자 단일 조회 -->
	<select id = "selectUserOne" parameterType="common.SearchUserStandard" resultMap="userMap">
		SELECT *
		  FROM PL_USER
		<if test ="condition == 'user_name'">
			WHERE USER_NAME = #{value}
		    AND STATUS = 'N'		
		</if>
		
		<if test ="condition == 'user_id'">
			WHERE USER_ID = #{value}
			AND STATUS = 'N'
		</if>
	</select>
	
	<!-- 공용)사용자 정보 수정 -->
	<update id="updateUserinfo" parameterType="pl.model.dto.PL_UserDTO">
        UPDATE
               PL_USER
        <trim prefix="SET" prefixOverrides=",">
    		<if test="user_pwd != null and user_pwd != ''">
             , USER_PWD = #{user_pwd}
    		</if>
    		<if test="user_name != null and user_name != ''">
             , USER_NAME = #{user_name}
    		</if>
    		<if test="phone != null and phone != ''">
             , PHONE = #{phone}
    		</if>
        </trim>
         WHERE USER_ID = #{user_id}
         AND STATUS = 'N'
	</update>
	
	<!-- 관리자)회원 삭제 -->
	<delete id="deleteUserOne" parameterType="_int">
        DELETE
          FROM PL_USER
         WHERE USER_NO = #{user_no}
    </delete>
    
    <!-- 관리자)추천 장소 수정 -->
   	<update id="updatePlaceList" parameterType="pl.model.dto.PL_ListAllDTO">
		UPDATE PLACE_LIST A 
		<set>
			<if test="pl_name != null and pl_name != ''">
				A.PL_NAME = #{ pl_name },
			</if>
			<if test="pl_address != null and pl_address != ''">
				A.PL_ADDRESS = #{ pl_address },
			</if>
			<if test="pl_tel != null and pl_tel != ''">
				A.PL_TEL = #{ pl_tel },
			</if>
			<if test="score gt 0 and score lt 6">
				A.SCORE = #{ score },
			</if>
			<if test="pl_catecode != null and pl_catecode != ''">
				A.PL_CATECODE = #{ pl_catecode },
			</if>
			<if test="pl_reserve != null and pl_reserve != ''">
				A.PL_RESERVE = #{ pl_reserve },
			</if>
		</set>
		 WHERE A.PL_NO = #{ pl_no } 
	</update>
    
    <!-- 관리자)추천 장소 삭제 -->
    <delete id="deletePlaceList" parameterType="_int">
		DELETE FROM PLACE_LIST
		WHERE PL_NO = #{ plNo }
	</delete>
	    
	

</mapper>